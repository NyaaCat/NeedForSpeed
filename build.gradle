/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'maven-publish'
}
ext.minecraftVersion = "1.19.2"

ext.pluginNameUpper = "NeedForSpeed"
ext.pluginNameLower = ext.pluginNameUpper.toLowerCase()
ext.majorVersion = 1
ext.minorVersion = 0

// Suppiled by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x"                : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"
ext.jdDirectory = System.env.JAVADOCS_DIR == null ? null               : "$System.env.JAVADOCS_DIR"

group = "cat.nyaa"
archivesBaseName = "${pluginNameUpper}-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber"


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name 'NyaaCat'
        url 'https://ci.nyaacat.com/maven/'
    }
    maven { name 'WorldEdit'; url 'https://maven.enginehub.org/repo/' }
    maven {
        name 'aikar'
        url 'https://repo.aikar.co/content/groups/aikar/'
    }
    maven { name 'Spigot'; url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'paper'; url 'https://papermc.io/repo/repository/maven-public/' }
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'cat.nyaa:nyaacore:9.1-SNAPSHOT'
    implementation "com.sk89q.worldedit:worldedit-bukkit:7.3.0-SNAPSHOT"
    implementation "io.papermc.paper:paper-api:$minecraftVersion-R0.1-SNAPSHOT"
    implementation 'land.melon.lab:SimpleLanguageLoader:1.8.3'

    implementation 'org.jetbrains:annotations:23.0.0'
}


// source file modification (modify version string)
processResources {
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
}

// source file jar
task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

// javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

// compile options
compileJava {
    options.encoding("UTF-8")
}

javadoc {
    options {
        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'

        if (JavaVersion.current() > JavaVersion.VERSION_1_9) {
            addBooleanOption('html5', true)
        }
    }
}

// maven publish
publishing {
    publications {
        mavenJava(MavenPublication) {
            group      project.group
            artifactId pluginNameLower
            version    "$majorVersion.$minorVersion-SNAPSHOT"

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url mavenDirectory
        }
    }
}